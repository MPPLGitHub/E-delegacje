# Generated by Django 3.1.7 on 2021-04-10 14:30

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import e_delegacje.enums


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BtUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('employee_level', models.CharField(choices=[('lvl1', 'podstawowy'), ('lvl2', 'kierownik'), ('lvl3', 'dyrektor'), ('lvl4', 'dyrektor regionu'), ('lvl5', 'dyrektor dywizji'), ('lvl6', 'członek zarządu'), ('lvl7', 'prezes zarządu')], default=e_delegacje.enums.BtEmployeeLevel['lvl7'], max_length=15)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BtApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trip_category', models.CharField(choices=[('kr', 'krajowa'), ('zg', 'zagraniczna')], max_length=2)),
                ('application_status', models.CharField(choices=[('saved', 'Zapisany'), ('in_progress', 'W akceptacji'), ('approved', 'Zaakcdptowany'), ('settled', 'Rozliczony'), ('canceled', 'Anulowany')], max_length=30)),
                ('employee_level', models.CharField(choices=[('lvl1', 'podstawowy'), ('lvl2', 'kierownik'), ('lvl3', 'dyrektor'), ('lvl4', 'dyrektor regionu'), ('lvl5', 'dyrektor dywizji'), ('lvl6', 'członek zarządu'), ('lvl7', 'prezes zarządu')], max_length=30)),
                ('application_date', models.DateField(auto_now_add=True)),
                ('trip_purpose_text', models.CharField(max_length=250)),
                ('transport_type', models.CharField(choices=[('train', 'pociąg'), ('plane', 'samolot'), ('company_car', 'samochód służbowy'), ('own_car', 'własny samochód'), ('other', 'inny')], max_length=30)),
                ('travel_route', models.CharField(max_length=120)),
                ('planned_start_date', models.DateField()),
                ('planned_end_date', models.DateField()),
                ('advance_payment', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BtApplicationSettlement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bt_application_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bt_applications_settlements', to='e_delegacje.btapplication')),
            ],
        ),
        migrations.CreateModel(
            name='BtCostCenter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=20)),
                ('cost_center_number', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='BtLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('profit_center', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='BtMileageRates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_type', models.CharField(choices=[('car_under_900cm3', 'auto o pojemności do 900cm3'), ('car_above_900cm3', 'auto o pojemności powyżej 900cm3'), ('motorbike', 'motocykl'), ('moped', 'motorowe')], max_length=20)),
                ('rate', models.DecimalField(decimal_places=4, max_digits=6)),
            ],
        ),
        migrations.CreateModel(
            name='BtRatesTax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diet_rates', models.IntegerField()),
                ('etc', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='BtRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='BtSubmissionStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_text', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='BtDivision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Bt_Divisions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BtDepartment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('cost_center', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Bt_Departments', to='e_delegacje.btcostcenter')),
                ('manager_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Bt_Departments', to=settings.AUTH_USER_MODEL)),
                ('profit_center', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Bt_Departments', to='e_delegacje.btlocation')),
            ],
        ),
        migrations.AddField(
            model_name='btcostcenter',
            name='profit_center_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Bt_CostCenters', to='e_delegacje.btlocation'),
        ),
        migrations.CreateModel(
            name='BtApplicationSettlementMileage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bt_car_reg_number', models.CharField(max_length=8)),
                ('trip_start_place', models.CharField(max_length=50)),
                ('trip_date', models.DateField()),
                ('trip_description', models.CharField(max_length=120)),
                ('trip_purpose', models.CharField(max_length=240)),
                ('mileage', models.DecimalField(decimal_places=2, max_digits=8)),
                ('bt_application_settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bt_application_settlement_mileages', to='e_delegacje.btapplicationsettlement')),
                ('bt_milage_rate', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bt_application_settlement_mileages', to='e_delegacje.btmileagerates')),
            ],
        ),
        migrations.CreateModel(
            name='BtApplicationSettlementInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bt_completed', models.CharField(choices=[('tak', 'tak'), ('nie', 'nie')], max_length=25)),
                ('bt_start_date', models.DateField()),
                ('bt_start_time', models.TimeField()),
                ('bt_end_date', models.DateField()),
                ('bt_end_time', models.TimeField()),
                ('advance_payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bt_application_settlement_info', to='e_delegacje.btapplication')),
                ('bt_application_settlement', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bt_application', to='e_delegacje.btapplicationsettlement')),
            ],
        ),
        migrations.CreateModel(
            name='BtApplicationSettlementFeeding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('breakfast_quantity', models.IntegerField()),
                ('dinner_quantity', models.IntegerField()),
                ('supper_quantity', models.IntegerField()),
                ('bt_application_settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bt_application_settlement_feeding', to='e_delegacje.btapplicationsettlement')),
            ],
        ),
        migrations.CreateModel(
            name='BtApplicationSettlementCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bt_cost_category', models.CharField(choices=[('accommodation', 'nocleg'), ('transport', 'dojazd'), ('luggage', 'bagaż'), ('other', 'inne')], max_length=40)),
                ('bt_cost_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('bt_cost_document_date', models.DateField()),
                ('bt_cost_VAT_rate', models.CharField(choices=[('W1', '23 %'), ('W7', '7 %'), ('WN', 'nie dotyczy'), ('W0', 'zwolniony')], max_length=10)),
                ('bt_application_settlement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bt_application_settlement_costs', to='e_delegacje.btapplicationsettlement')),
                ('bt_cost_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bt_application_settlement_costs', to='e_delegacje.btratestax')),
            ],
        ),
        migrations.AddField(
            model_name='btapplication',
            name='CostCenter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bt_applications', to='e_delegacje.btcostcenter'),
        ),
        migrations.AddField(
            model_name='btapplication',
            name='application_author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bt_applications_author', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='btapplication',
            name='target_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bt_applications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='btuser',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bt_Users', to='e_delegacje.btdepartment'),
        ),
        migrations.AddField(
            model_name='btuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='btuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
